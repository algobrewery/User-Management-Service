plugins {
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'com.userapi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.vladmihalcea:hibernate-types-52:2.16.2'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.2.11'

    // Spring Security for API key authentication
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // HTTP client for calling Client Management Service
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // AWS CloudWatch dependencies
    implementation 'io.micrometer:micrometer-registry-cloudwatch2'
    implementation 'software.amazon.awssdk:cloudwatch:2.20.56'
    implementation 'io.micrometer:micrometer-core'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'

    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
}

test {
    useJUnitPlatform()
}

// Ensure we create a fat JAR
bootJar {
    enabled = true
    archiveClassifier = ''
}

jar {
    enabled = false
}

// Add Java toolchain to ensure consistent Java version
// Commented out to allow using available Java version
// java {
//     toolchain {
//         languageVersion = JavaLanguageVersion.of(17)
//     }
// }

// Configure annotation processing
tasks.withType(JavaCompile) {
    options.compilerArgs += [
        '-parameters',
        '-Xlint:none'
    ]
}
