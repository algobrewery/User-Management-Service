############################################################
# PostgreSQL Database Configuration for Testing (same as main)
############################################################
spring.datasource.url=jdbc:postgresql://nucleus-staging.c6j42qq2krlk.us-east-1.rds.amazonaws.com:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=nucleus-staging
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Ensure Spring does not replace the configured datasource
spring.test.database.replace=none

# Disable SQL init (tests can use @Sql files if needed)
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=false

# Logging (reduced noise in tests)
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Misc test tuning
spring.test.context.cache.maxSize=32
spring.jpa.open-in-view=false

# Test API Key Configuration - use the same API key as in health-check.ps1
app.api.keys=APAHdSmELUW4iMvBR6w4xP_q8K-blauC8HKml3CROOA

# Use real client management service for integration tests
client-management.service.url=https://qokdavzgh7.execute-api.us-east-1.amazonaws.com/prod
client-management.service.timeout=10

# Use real roles and permissions service for integration tests
roles.service.url=https://i9vn73mmkg.execute-api.us-east-1.amazonaws.com/prod/
roles.service.timeout=10
